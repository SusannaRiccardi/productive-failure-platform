# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).
#
# Examples:
#
#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])
#   Character.create(name: 'Luke', movie: movies.first)

patterns = Pattern.create(
    [
        {
            pattern: "circle-triangle-square-square-circle-triangle-square-square-circle-triangle-square-square-circle-triangle-square-square"
        }, {
            pattern: "square-circle-triangle-square-circle-triangle-square-circle-triangle-square-circle-triangle-square-circle-triangle-square"
        }, {
            pattern: "circle-circle-triangle-square-circle-circle-triangle-square-circle-circle-triangle-square-circle-circle-triangle-square"
        }, {
            pattern: "circle-square-triangle-circle-square-triangle-circle-square-triangle-circle-square-triangle-circle-square-triangle-triangle"
        }
    ]
)

iteration_consolidations = IterationConsolidation.create(
    [
        {
            pattern: "circle-triangle-square-square-circle-triangle-square-square-circle-triangle-square-square-circle-triangle-square-square",
            rep1svg: "<svg xmlns='http://www.w3.org/2000/svg' width='NaN' height='72' viewBox='0 0 NaN 72'> <rect width='434' height='72' x='0' y='0' fill='#fff' /> <g transform='translate(-96, -135)'> <text x='96' y='136'   fill='hsla(0, 0%, 0%, 1)' style='font: bold 32px sans-serif;'> <tspan x='96' dy='0' alignment-baseline='text-before-edge'> ( </tspan> </text><ellipse cx='145' cy='158' rx='20' ry='20' stroke='hsla(0, 0%, 0%, 1)' fill='#000' stroke-width='5' /><text x='181' y='138'   fill='hsla(0, 0%, 0%, 1)' style='font: bold 32px sans-serif;'> <tspan x='181' dy='0' alignment-baseline='text-before-edge'> + </tspan> </text><polygon fill='#000' points='252,178 234,142 216,178' stroke='hsla(0, 0%, 0%, 1)' stroke-width='5'/><text x='274' y='139'   fill='hsla(0, 0%, 0%, 1)' style='font: bold 32px sans-serif;'> <tspan x='274' dy='0' alignment-baseline='text-before-edge'> + </tspan> </text><text x='309' y='140'   fill='hsla(0, 0%, 0%, 1)' style='font: bold 32px sans-serif;'> <tspan x='309' dy='0' alignment-baseline='text-before-edge'> ( </tspan> </text><rect x='328.5' y='141.5' width='42' height='42' stroke='hsla(0, 0%, 0%, 1)' fill='#000' stroke-width='5' /><text x='384' y='141'   fill='hsla(0, 0%, 0%, 1)' style='font: bold 32px sans-serif;'> <tspan x='384' dy='0' alignment-baseline='text-before-edge'> ) x 2 ) x 4 </tspan> </text> </g> </svg>",
            rep2svg: "<svg xmlns='http://www.w3.org/2000/svg' width='NaN' height='129' viewBox='0 0 NaN 129'> <rect width='460' height='129' x='0' y='0' fill='#fff' /> <g transform='translate(-114, -87)'> <text x='114' y='95'   fill='hsla(0, 0%, 0%, 1)' style='font: bold 32px sans-serif;'> <tspan x='114' dy='0' alignment-baseline='text-before-edge'> 1 circle </tspan><tspan x='114' dy='1.2em' alignment-baseline='text-before-edge'> 1 triangle </tspan><tspan x='114' dy='1.2em' alignment-baseline='text-before-edge'> 2 squares </tspan> </text><g> <line x1='237.5' y1='90.5' x2='277.5' y2='90.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' />  </g><g> <line x1='277.5' y1='90.5' x2='276.5' y2='216.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' />  </g><g> <line x1='276.5' y1='216.5' x2='237.5' y2='215.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' />  </g><g> <line x1='276.5' y1='161.5' x2='327.5' y2='161.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' /> <polygon fill='hsla(0, 0%, 0%, 1)' stroke='none' points='327.5,167,338.5,161.5,327.5,156' /> </g><text x='350' y='139'   fill='hsla(0, 0%, 0%, 1)' style='font: bold 32px sans-serif;'> <tspan x='350' dy='0' alignment-baseline='text-before-edge'> repeat 4 times </tspan> </text> </g> </svg>",
            rep3svg: "<svg xmlns='http://www.w3.org/2000/svg' width='NaN' height='168' viewBox='0 0 NaN 168'> <rect width='395' height='168' x='0' y='0' fill='#fff' /> <g transform='translate(-89, -97)'> <ellipse cx='136' cy='193' rx='26' ry='26' stroke='hsla(0, 0%, 0%, 1)' fill='#000' stroke-width='5' /><polygon fill='#000' points='223,219 202,172 181,219' stroke='hsla(0, 0%, 0%, 1)' stroke-width='5'/><rect x='238.5' y='169.5' width='48' height='48' stroke='hsla(0, 0%, 0%, 1)' fill='#000' stroke-width='5' /><rect x='298.5' y='169.5' width='47' height='47' stroke='hsla(0, 0%, 0%, 1)' fill='#000' stroke-width='5' /><g> <line x1='92.5' y1='157.5' x2='92.5' y2='185.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' />  </g><g> <line x1='92.5' y1='157.5' x2='360.5' y2='157.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' />  </g><g> <line x1='361.5' y1='157.5' x2='361.5' y2='187.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' />  </g><g> <line x1='315.5' y1='136.5' x2='315.5' y2='154.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' />  </g><g> <line x1='316.5' y1='137.5' x2='410.5' y2='138.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' />  </g><g> <line x1='412.5' y1='139.5' x2='412.5' y2='154.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' /> <polygon fill='hsla(0, 0%, 0%, 1)' stroke='none' points='407,154.5,412.5,165.5,418,154.5' /> </g><g> <line x1='284.5' y1='124.5' x2='284.5' y2='156.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' />  </g><g> <line x1='285.5' y1='122.5' x2='455.5' y2='122.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' />  </g><g> <line x1='456.5' y1='125.5' x2='455.5' y2='157.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' /> <polygon fill='hsla(0, 0%, 0%, 1)' stroke='none' points='450.00268358152107,157.32820886192255,455.15641772384504,168.49463283695786,460.99731641847893,157.67179113807748' /> </g><g> <line x1='256.5' y1='105.5' x2='256.5' y2='154.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' />  </g><g> <line x1='257.5' y1='100.5' x2='482.5' y2='101.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' />  </g><g> <line x1='484.5' y1='103.5' x2='483.5' y2='161.5'  stroke-linecap='round' stroke='hsla(0, 0%, 0%, 1) 'stroke-width='5' /> <polygon fill='hsla(0, 0%, 0%, 1)' stroke='none' points='478.00081729698053,161.40518650512035,483.3103730102407,172.49836540603897,488.99918270301947,161.59481349487965' /> </g> </g> </svg>",
            rep4svg: "<svg xmlns='http://www.w3.org/2000/svg' width='NaN' height='65' viewBox='0 0 NaN 65'> <rect width='348' height='65' x='0' y='0' fill='#fff' /> <g transform='translate(-105, -139)'> <text x='105' y='143'   fill='hsla(0, 0%, 0%, 1)' style='font: bold 32px sans-serif;'> <tspan x='105' dy='0' alignment-baseline='text-before-edge'> ( </tspan> </text><ellipse cx='160' cy='165' rx='22' ry='22' stroke='hsla(0, 0%, 0%, 1)' fill='#000' stroke-width='5' /><polygon fill='#000' points='249.5,185 228,146 206.5,185' stroke='hsla(0, 0%, 0%, 1)' stroke-width='5'/><rect x='265.5' y='142.5' width='43' height='43' stroke='hsla(0, 0%, 0%, 1)' fill='#000' stroke-width='5' /><rect x='321.5' y='143.5' width='42' height='42' stroke='hsla(0, 0%, 0%, 1)' fill='#000' stroke-width='5' /><text x='380' y='141'   fill='hsla(0, 0%, 0%, 1)' style='font: bold 32px sans-serif;'> <tspan x='380' dy='0' alignment-baseline='text-before-edge'> ) x 4 </tspan> </text> </g> </svg>",
            rep5svg: "<svg xmlns='http://www.w3.org/2000/svg' width='233' height='74' viewBox='0 0 233 74'> <rect width='237' height='74' x='0' y='0' fill='#fff' /> <g transform='translate(-117, -119)'> <ellipse cx='143' cy='145' rx='23' ry='23' stroke='hsla(0, 0%, 0%, 1)' fill='#000' stroke-width='5' /><polygon fill='#000' points='227,168 208,127 189,168' stroke='hsla(0, 0%, 0%, 1)' stroke-width='5'/><rect x='250.5' y='124.5' width='44' height='44' stroke='hsla(0, 0%, 0%, 1)' fill='#000' stroke-width='5' /><rect x='307.5' y='123.5' width='44' height='44' stroke='hsla(0, 0%, 0%, 1)' fill='#000' stroke-width='5' /> </g> </svg>",
            rep6svg: "<svg xmlns='http://www.w3.org/2000/svg' width='NaN' height='111' viewBox='0 0 NaN 111'> <rect width='479' height='111' x='0' y='0' fill='#fff' /> <g transform='translate(-126, -102)'> <text x='126' y='102'   fill='hsla(0, 0%, 0%, 1)' style='font: bold 32px sans-serif;'> <tspan x='126' dy='0' alignment-baseline='text-before-edge'> circle, triangle, square, square, </tspan><tspan x='126' dy='1.2em' alignment-baseline='text-before-edge'> circle, triangle, square, square, </tspan><tspan x='126' dy='1.2em' alignment-baseline='text-before-edge'> circle, triangle, square, square </tspan> </text> </g> </svg>",
            rep1text: "This is a really good representation of the pattern. It recognizes both of the repetitions: 'circle-triangle-square-square' and the double 'square' inside it. It makes no use of arrows and text. When you talk about iteration, this representation is something you should think about: it is a pattern that repeats itself for a given number of times.",
            rep2text: "This is a really good representation of the pattern, that makes use of both arrows and text. The repetition in the pattern is recognized: it tells which how many times a shape repeats itself. This is a clear representation of the concept of iteration: a pattern, repeating for a number of times.",
            rep3text: "In this representation, the repetition in the pattern has been identified: the arrows indicate that the pattern has to be re-drawn. The only thing missing in this representation is the recognition of the repetition of the square inside the pattern. Remember to identify as many repetitions as possible, to make everything more efficient.",
            rep4text: "This representation is good: the user has found the repeating pattern and has described how many times it repeats. However, the thing that could be added is the repetition of the two squares inside the repeating pattern. ",
            rep5text: "In this representation, the user has found the repeating pattern inside the provided one. However, there is no description of how many times it repeats. With iteration, you have to say that something is repeating, but you also have to say how many times it does, otherwise, you are not going to be able to know what is the right thing to do.",
            rep6text: "This representation does not respect the requirements for the activity: the goal was to identify the repetitions in the provided pattern, and here this is clearly not done. The pattern is described literally using text, instead of trying to describe the repetition of the shapes. This does not represent the concept of Iteration."
        }
    ]
)

admin = User.new
admin.email = 'admin@productivefailure.com'
admin.password = 'admin'
admin.password_confirmation = 'admin'
admin.admin = true
admin.save

user = User.new
user.email = 'user@productivefailure.com'
user.password = 'user'
user.password_confirmation = 'user'
user.save
